# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------
debug: false # Enable debug logs.
trace: false # Enable trace logs.

# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name: dataservice administration

# PROFILES
spring.profiles.active: default

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port: 9000
server.servlet.context-path: /myexpenses

# swagger
swagger.config.title: ${spring.application.name} REST API

# Create credentials to mongodb by mongo shell
# https://docs.mongodb.com/manual/tutorial/enable-authentication/ (No parece funcionar bien)
# db.createUser( { user: "mesteban", pwd: "newuser1", roles: [ { role: "userAdminAnyDatabase", db: "admin" } ] } )
# mejor este enlace:
# https://stackoverflow.com/questions/37372684/mongodb-3-2-authentication-failed/37374366 (este si)
# > use admin
# > db.createUser({user: "root", pwd: "123456", roles:["root"]})
# restart mongod.
# mongod --auth
# mongo -u "root" -p "123456" --authenticationDatabase "admin"
# > use myexpenses
# > db.createUser({user: "mesteban", pwd: "newuser1", roles:["dbOwner"]})
# mongo -u "mesteban" -p "newuser1"

# MONGODB (MongoProperties)
spring.data.mongodb:
    database: myexpenses
    host: 127.0.0.1
    port: 27017
    username: mesteban
    password: newuser1
    uri: mongodb://mesteban:newuser1@127.0.0.1:27017/myexpenses?w=1&socketTimeoutMS=10000
    options:
        socketTimeout: 5000
        connectionTimeout: 1000
        serverSelectionTimeout: 1000
   
# DATA REST (RepositoryRestProperties)
spring.data.rest.basePath: /

# AUTO-CONFIGURATION
spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration

management.endpoints.web.exposure.include: "*"
management.endpoints.shutdown.enabled: true

#info.app:
#    name: @project.name@
#    description: @project.description@
#
#endpoints.metrics.enabled: true
#spring.metrics.servo.enabled: false
#
## Use default logging config
#logging.config: classpath:production.xml
## To provide custom logging configuration
## logging.config: /usr/local/vpp/custom-logger-config.xml
#
## --- Jobs properties
#jobs.scheduled.task.enable: true
#jobs.scheduled.task.poolSize: 200
#
## --- Rest Template properties
#rest.template.maxTotal: 2000
#rest.template.defaultMaxPerRoute: 2000
#rest.template.connectTimeout: 5000
#rest.template.socketTimeout: 5000
#
# --- Jetty properties
jetty.thread.pool.enabled: true
jetty.thread.pool.maxThreads : 2000
jetty.thread.pool.minThreads : 100

# --- Jetty Access Log properties
jetty.access.log.enabled: false
jetty.access.log.origin: true
jetty.access.log.latency: true
jetty.access.log.date-format: dd/MMM/yyyy:HH:mm:ss.SSS Z
jetty.access.log.custom-field: true
jetty.access.log.custom-field-name: concurrentRequestCounter

# --- CORS Properties
cors.enabled: false
cors.allowed-origins: '*'
cors.allowed-headers: '*'
cors.expose-headers: 
cors.allow-credentials: false 
cors.max-age: 7200 # 2h in seconds
cors.allowed-methods: GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH


